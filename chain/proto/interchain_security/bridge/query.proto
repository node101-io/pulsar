syntax = "proto3";

package interchain_security.bridge;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "interchain_security/bridge/params.proto";
import "interchain_security/bridge/deposit_amount_map.proto";

option go_package = "github.com/cosmos/interchain-security/v5/x/bridge/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/interchain_security/bridge/params";
  
  }

  // TestQuery returns a test string "node101"
  rpc TestQuery (QueryTestRequest) returns (QueryTestResponse) {
    option (google.api.http).get = "/interchain_security/bridge/test";
  }

  // Queries a list of DepositAmountMap items.
  rpc DepositAmountMapAll (QueryAllDepositAmountMapRequest) returns (QueryAllDepositAmountMapResponse) {
    option (google.api.http).get = "/interchain_security/bridge/deposit_amount_map";
  }

  // Queries a DepositAmountMap by address.
  rpc DepositAmountMap (QueryGetDepositAmountMapRequest) returns (QueryGetDepositAmountMapResponse) {
    option (google.api.http).get = "/interchain_security/bridge/deposit_amount_map/{address}";
  }
  
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// QueryTestRequest is request type for the Query/TestQuery RPC method.
message QueryTestRequest {}

// QueryTestResponse is response type for the Query/TestQuery RPC method.
message QueryTestResponse {
  // result holds the test string
  string result = 1;
}

message QueryAllDepositAmountMapRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDepositAmountMapResponse {
  repeated DepositAmountMap depositAmountMap = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetDepositAmountMapRequest {
  string address = 1;
}

message QueryGetDepositAmountMapResponse {
  DepositAmountMap depositAmountMap = 1 [(gogoproto.nullable) = false];
}
